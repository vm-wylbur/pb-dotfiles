# -*- mode: org -*-
# -*- coding: utf-8 -*-
#+TITLE: PB's Emacs configuration
#+OPTIONS: toc:4 h:4
#+STARTUP: hideblocks
#+STARTUP: logdone
#+STARTUP: indent
#+STARTUP: showstars
#+STARTUP: showall
#+PROPERTY:  eval yes
#+PROPERTY: header-args :results silent

* NOTE: to execute, C-c C-v C-b 

* big picture [1/5]
** TODO turn off bells, the rest of the basic setup stuff. 
** TODO possible to make tabs nicer? 
** TODO add to prefixes:
*** TODO 0-9 jump to tab 
*** TODO a (applications: todotxt, eventually mail)
*** TODO c (commenting)
*** TODO b (buffers) 
*** TODO f (files) counsel-recentf, counsel-ag,
*** TODO j jump ace-window, avy-char
*** TODO b (buffers)
*** TODO x (text): some of the spacemacs stuff, also move line up(j), down(k)
;;   
** DONE migrate back to org init
CLOSED: [2016-12-31 Sat 09:28]
** TODO set which-key to take half the window, on bottom 

* Introduction
** About this file
   :PROPERTIES:
   :CUSTOM_ID: babel-init
   :END:      
<<babel-init>>

This is an effort to write a literate elisp init file. I'm mostly following [[http://pages.sachachua.com/.emacs.d/Sacha.html%5D%5D%20amazing%20work.%20%0A%0A*%20Introduction][Sacha Chua's]] amazing work.

** Why org-mode

Writing this file in org-mode allows me to export it as html (which happens automagically on GitHub), and to mix my thinking with the code. This is another step toward [[http://reproducibleresearch.net][reproducible research]], close to [[https://hrdag.org][HRDAG]]'s "principled data processing" ideas.

** smart parens (to help us find our way)
#+begin_src emacs-lisp 
(use-package smartparens-config
    :ensure smartparens
    :config
    (progn
      (show-smartparens-global-mode t)))
(add-hook 'prog-mode-hook 'turn-on-smartparens-strict-mode)
(add-hook 'markdown-mode-hook 'turn-on-smartparens-strict-mode)
#+end_src 

** hide customization variables
#+begin_src emacs-lisp
  (setq custom-file "~/.emacs.d/custom.el"
 	  kill-buffer-query-functions
 	  (remq 'process-kill-buffer-query-function
 			kill-buffer-query-functions)
 	  user-full-name "Patrick Ball"
 	  user-mail-address "pball@fastmail.fm")
#+end_src

** UI and visuals 
*** Font and theme
#+begin_src emacs-lisp
(defconst my/font "Monaco-13")
(set-face-attribute 'default nil :font "Monaco-13")
(set-frame-font  "Monaco-13"  nil t)
(use-package color-theme
  :ensure t)
(setq custom-safe-themes t)
(use-package zenburn-theme :disabled nil
  :ensure t
  :diminish "")
  :config
;; (load-theme 'zenburn)
(use-package hc-zenburn-theme)
(load-theme 'hc-zenburn)
#+end_src 
*** frame and window setup 
#+begin_src emacs-lisp 
(setq ring-bell-function 'ignore)
(show-paren-mode 1)
(tool-bar-mode -1)
(menu-bar-mode t)
(setq show-paren-delay 0
      column-number-mode 1
      inhibit-startup-message t)
(setq-default cursor-type 'bar)
;; (add-hook 'text-mode-hook 'turn-on-visual-line-mode)
(fringe-mode '(8 . 2))
#+end_src
** simple starting settings 
*** backups 
#+begin_src emacs-lisp
(setq backup-directory-alist '(("." . "~/.emacs.d/backups")))
(setq delete-old-versions -1)
(setq version-control t)
(setq vc-make-backup-files t)
(setq auto-save-file-name-transforms '((".*" "~/.emacs.d/auto-save-list/" t)))
#+end_src 
*** auto-save 
#+begin_src emacs-lisp
(use-package super-save 
  :init (super-save-mode +1) 
  :config 
     (setq super-save-auto-save-when-idle t)
     (setq auto-save-default nil))

#+end_src 
*** history 
#+begin_src emacs-lisp
(setq savehist-file "~/.emacs.d/savehist")
(savehist-mode 1)
(setq history-length t)
(setq history-delete-duplicates t)
(setq savehist-save-minibuffer-history 1)
(setq savehist-additional-variables
      '(kill-ring
        search-ring
        regexp-search-ring))
#+end_src 

*** simple behaviors
#+begin_src emacs-lisp
(setq vc-follow-symlinks t)          ; don't ask for confirmation when opening
(setq inhibit-startup-screen t)    ; inhibit useless and old-school startup screen
(setq ring-bell-function 'ignore )   ; silent bell when you make a mistake
(setq sentence-end-double-space nil) ; sentence SHOULD end with only a point.
(setq default-fill-column 80)      ; toggle wrapping text at the 80th
#+end_src 

*** encoding
#+begin_src emacs-lisp
(setq coding-system-for-read 'utf-8)
(setq coding-system-for-write 'utf-8)
#+end_src 

*** desktop 
#+begin_src emacs-lisp 
(use-package desktop                    ; Save buffers, windows and frames
  :init (desktop-save-mode 1)
  :config
    (setq desktop-auto-save-timeout 60)
    (setq history-length 250)
    (add-to-list 'desktop-globals-to-save 'file-name-history)
    (setq desktop-path '("~/.emacs.d/")))
#+end_src 


* evil-mode 
with leader or with general?

* Flyspell and flycheck 
remember the osx hack that makes that nice.

* markdown mode 
- visual line wrapping (with evil)

* which-key + tiny-menu 

* start server 

* mode line 
This is the last piece, but crucial. nice to get the spacemacs one
* Conclusion 
#+begin_src emacs-lisp
(setq initial-scratch-message ";;; Welcome to Emacs, PB.") 
#+end_src
