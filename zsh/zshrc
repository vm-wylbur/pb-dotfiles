#
#  Author: PB
#  Maintainer: PB
#  License: (c) HRDAG 2022, some rights reserved: GPL v2 or newer
#
# Executes commands at the start of an interactive session.

# Make sure the shell is interactive
case $- in
    *i*) ;;
    *) return ;;
esac
#

# ---functions -----
function chpwd() {
  emulate -L zsh
  ls -ltrFG --color
}

# ---PB additions below-----
# init fasd on eleanor; fasd is part of pretzo on petunia
case $HOST in
  (petunia) SED="gsed" ;;
  (henwen)
    eval "$(fasd --init auto)"
    SED="sed"
    ;;
  (eleanor)
    eval "$(fasd --init auto)"
    SED="sed"
    ;;
  (*) eval "$(fasd --init auto)"
    SED="sed"
    ;;
esac

# colors
export TERM=xterm-256color
export ZSH_THEME="agnoster"
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=black,bold'

# ---paths-----
# this starts with the output of /usr/libexec/path_helper in xpath
# but puts all the std /usr paths after the gnubin stuff.
BREWER="/opt/homebrew/bin/brew"
xpath="$PATH"
PATH="$HOME/bin"
PATH+=":$HOME/anaconda3/bin"
PATH+=":$HOME/.local/bin"
PATH+=":/usr/local/sbin"
PATH+=":/usr/local/bin"
PATH="$($BREWER --prefix coreutils)/libexec/gnubin:$PATH"
PATH="$($BREWER --prefix ed)/libexec/gnubin:$PATH"
PATH="$($BREWER --prefix findutils)/libexec/gnubin:$PATH"
PATH="$($BREWER --prefix gnu-indent)/libexec/gnubin:$PATH"
PATH="$($BREWER --prefix gnu-sed)/libexec/gnubin:$PATH"
PATH="$($BREWER --prefix gnu-tar)/libexec/gnubin:$PATH"
PATH="$($BREWER --prefix gnu-which)/libexec/gnubin:$PATH"
PATH="$($BREWER --prefix grep)/libexec/gnubin:$PATH"
PATH+=":$xpath"
PATH+=":$HOME/projects/hrdag/snap/bin"
PATH+=":$HOME/projects/hrdag/resource-utils/bin"
PATH+=":$HOME/dotfiles/scripts"
PATH+="/usr/local/opt/ruby/bin"
export PATH

# ---shell options-----
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt CHASE_LINKS
setopt ALWAYS_TO_END
setopt rm_star_silent
setopt HIST_IGNORE_DUPS
setopt BANG_HIST
setopt EXTENDED_HISTORY
setopt APPEND_HISTORY
setopt appendhistory     #Append history to the history file (no overwriting)
setopt sharehistory      #Share history across terminals
setopt INC_APPEND_HISTORY
setopt incappendhistory  #Immediately append to the history file, not just when a term is killed

HISTSIZE=10000               #How many lines of history to keep in memory
HISTFILE=~/.zsh_history     #Where to save history to disk
SAVEHIST=10000               #Number of history entries to save to disk
HISTDUP=erase               #Erase duplicates in the history file

# setting up fzf keybindings
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ---aliases-----
alias gs="git status"
# alias gl="git log --graph --pretty=oneline --abbrev-commit"
alias gl='git log --pretty=format:"%h%x09%an%x09%ad%x09%s"'
alias gc='git commit'

alias gcc="gcc-8"
alias gcov="gcov-8"
alias g++="g++-8"
alias cpp="cpp-8"
alias c++="c++-8"

alias '..'='cd ..'
alias '...'='cd ../..'
alias '....'='cd ../../..'
# alias mm="make -f src/Makefile"
alias nm="nvim Makefile"
alias ccat="pygmentize $1"

alias ll="ls -ltrFG --color"
alias la="ls -laFG  --color"
# List only directories
# alias lsd="ls -lF --color | grep --color=never '^d'"

# overriding alias=j in zprezto's fasd module: use fzf, don't print scores
alias j='xdir=$(fasd -ld | fzf --tac) && cd "$xdir"'

# use fzf for history search
alias h='print -z $(fc -l 1 | fzf +s --tac | $SED -re "s/^\s*[0-9]+\s*//")'

# ---env vars-----
export EDITOR='vim'
export LANG='en_US.UTF-8';
export LC_ALL='en_US.UTF-8';
export PAGER="most"

# ---for zsh-----
export KEYTIMEOUT=1
bindkey -e
bindkey '^?' backward-delete-char
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward
bindkey '^ ' autosuggest-accept

# autoload -U zmv   # the conventions are a bit opaque
autoload -U promptinit; promptinit
autoload -U select-word-style  # makes backward-word-kill stop at non-alpha
select-word-style bash

# ---local-----
if [[ -f $HOME/.github-token ]]; then
	source ~/.github-token
fi

export LOCALGIT="$HOME/projects"
export HRDAGGIT="$LOCALGIT/hrdag"
export PERSONALGIT="$LOCALGIT/personal"

export PURE_ALWAYS_SHOW_USER=1

# optionally define custom generators
prompt_custom() {
	preprompt+=( custom )
}
prompt pure

# add the generator where it's needed
prompt_pure_pieces=(
  prompt_pure_render_hostname
  prompt_pure_render_path
  prompt_pure_render_vcs
  prompt_pure_render_exec_time
)
PROMPT='[%j]%(?.%F{magenta}.%F{red})${PURE_PROMPT_SYMBOL:-‚ùØ}%f '

# source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
# if [[ -f ~/.iterm2_shell_integration.zsh ]]; then
   # only true on MacOS
#    source ~/.iterm2_shell_integration.zsh
# fi
# source ~/.machinespecific
# done.

